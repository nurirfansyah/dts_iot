# hw definition file for processing by chibios_pins.py
# for minimal F407 build board
# primarely for stm32f407vgt6 development board

# MCU class and specific type
MCU STM32F4xx STM32F407xx

# board ID for firmware load
APJ_BOARD_ID 3

# crystal frequency
OSCILLATOR_HZ 8000000
STM32_PLLM_VALUE 8

# flash size
FLASH_SIZE_KB 1024
FLASH_RESERVE_START_KB 64

# board voltage
STM32_VDD 330U

# ChibiOS system timer
STM32_ST_USE_TIMER 5

# order of I2C buses
# ~ I2C_ORDER I2C2 I2C1

# order of UARTs     
# ~ UART_ORDER OTG1
# ~ UART_ORDER OTG1 USART1
UART_ORDER OTG1 UART4 USART1
# ~ UART_ORDER OTG1 USART6 USART1 UART4 USART3 USART2


########## PINS ########## 

# Battery Voltage two-resistors 10k/1k
PA2 BATT_VOLTAGE_SENS ADC1 SCALE(1)
# PWM output for buzzer
PA15 TIM2_CH1 TIM2 GPIO(77) ALARM

# ---------USB-------------
# Now we define the pins that USB is connected on.
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

PA10 USART1_RX USART1
PA9 USART1_TX USART1 not used in fmu_v3

# UART4 serial GPS
PA0 UART4_TX UART4
PA1 UART4_RX UART4

# These are the pins for SWD debugging with a STlinkv2 or black-magic probe.
# ~ PA13 JTMS-SWDIO SWD
# ~ PA14 JTCK-SWCLK SWD

# UART for IOMCU
# IOMCU_UART USART6
#  USART6 to IO
# ~ PC6 USART6_TX USART6
# ~ PC7 USART6_RX USART6


# ~ PC7 TIM8_CH2 TIM8 PPMIN
# ~ PC7 TIM8_CH2 TIM8 RCIN FLOAT LOW

# sparky2
# -------RCIN-------------
# Soft Serial for serial RC & PPM
# ~ PC6 SBUS_INVERT OUTPUT
# ~ PC7 TIM8_CH2 TIM8 RCIN FLOAT LOW

# mini-pix
# RC Input PPM 
PB0 TIM3_CH3 TIM3 PPMIN 
# also USART6_RX for serial RC
PC7 TIM8_CH2 TIM8 RCIN FLOAT LOW

# airbotf4
# "PPM" solder pad/resistor should be soldered and "S-BUS" resistor/solder pad removed
# Overwise UART1 or RCIN will not work
# ~ PB14 TIM12_CH1 TIM12 RCININT PULLDOWN LOW

# ombibusf4pro
# "PPM" solder pad/resistor should be soldered and "S-BUS" resistor/solder pad removed
# Overwise UART1 or UART6 or RCIN will not work
# ~ PB8 TIM4_CH3 TIM4 RCININT PULLDOWN LOW

# DrotekF3pro
# ~ PB0 INPUT PULLUP # RC Input PPM

# Now the first SPI bus. At minimum you need SCK, MISO and MOSI pin
# definitions. You can add speed modifiers if you want them, otherwise
# the defaults for the peripheral class are used.

# primary SPI bus for sensors
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1
# This defines the CS pin for the magnetometer and first IMU. Note
# that CS pins are software controlled, and are not tied to a particular
# SPI bus.
# PC1 MAG_CS CS
PC2 MPU_CS CS
# PD7 BARO_CS CS
PD7 BMP280_CS CS

# the 2nd SPI bus (FLASH/FRAM and microSD-SPI)
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2
# ~ PD10 FLASH_CS CS
PD2 SDCARD_CS CS
# ~ PD10 FRAM_CS CS
# ~ PB3 FLASH_CS CS
# The CS pin for FRAM (ramtron). This one is marked as using
# SPEED_VERYLOW, which matches the HAL_PX4 setup.
# ~ PD10 FRAM_CS CS SPEED_VERYLOW

#omnibusf4pro
# ~ PB12 SDCARD_CS CS


# SPI 3 
# ~ PB3 SPI3_SCK SPI3
# ~ PB4 SPI3_MISO SPI3
# ~ PB5 SPI3_MOSI SPI3

# SPI 3
# ~ PB4 TIM3_CH1 TIM3 GPIO(56) ALARM
# ~ PA15 OSD_CS CS
# ~ PC10 SPI3_SCK SPI3
# ~ PC11 SPI3_MISO SPI3
# ~ PC12 SPI3_MOSI SPI3



# Now the first I2C bus. The pin speeds are automatically setup
# correctly, but can be overridden here if needed.
# ~ PB8 I2C1_SCL I2C1
# ~ PB9 I2C1_SDA I2C1

# the 2nd I2C bus
# ~ PB10 I2C2_SCL I2C2
# ~ PB11 I2C2_SDA I2C2

# Now setup the pins for the microSD card, if available.
# ~ PC8 SDIO_D0 SDIO
# ~ PC9 SDIO_D1 SDIO
# ~ PC10 SDIO_D2 SDIO
# ~ PC11 SDIO_D3 SDIO
# ~ PC12 SDIO_CK SDIO
# ~ PD2 SDIO_CMD SDIO

# The DEVID values and device names are chosen to match the PX4 port
# of ArduPilot so users don't need to re-do their accel and compass
# calibrations when moving to ChibiOS.

# ~ SPIDEV ms5611         SPI1 DEVID3  BARO_CS      MODE3 20*MHZ 20*MHZ
# ~ SPIDEV ms5611_ext     SPI4 DEVID2  BARO_EXT_CS  MODE3 20*MHZ 20*MHZ
# ~ SPIDEV mpu6000        SPI1 DEVID4  MPU_CS       MODE3  2*MHZ  8*MHZ
# ~ SPIDEV icm20608-am    SPI1 DEVID2  ACCEL_EXT_CS MODE3  4*MHZ  8*MHZ
# ~ SPIDEV mpu9250        SPI1 DEVID4  MPU_CS       MODE3  4*MHZ  8*MHZ
# ~ SPIDEV mpu9250     SPI1 DEVID4  MPU9250_CS MODE3   2*MHZ   4*MHZ
SPIDEV mpu9250        SPI1 DEVID4  MPU_CS       MODE3  1*MHZ  4*MHZ
# ~ SPIDEV mpu9250_ext    SPI4 DEVID1  MPU_EXT_CS   MODE3  4*MHZ  8*MHZ
# ~ SPIDEV hmc5843        SPI1 DEVID5  MAG_CS       MODE3 11*MHZ 11*MHZ
# ~ SPIDEV lsm9ds0_g      SPI1 DEVID1  GYRO_EXT_CS  MODE3 11*MHZ 11*MHZ 
# ~ SPIDEV lsm9ds0_am     SPI1 DEVID2  ACCEL_EXT_CS MODE3 11*MHZ 11*MHZ 
# ~ SPIDEV lsm9ds0_ext_g  SPI4 DEVID4  GYRO_EXT_CS  MODE3 11*MHZ 11*MHZ 
# ~ SPIDEV lsm9ds0_ext_am SPI4 DEVID3  ACCEL_EXT_CS MODE3 11*MHZ 11*MHZ 
# ~ SPIDEV ramtron        SPI2 DEVID10 FRAM_CS      MODE3  8*MHZ  8*MHZ 
# ~ SPIDEV ramtron        SPI3 DEVID10 FRAM_CS      MODE3  8*MHZ  8*MHZ 
# ~ SPIDEV external0m0    SPI4 DEVID5  MPU_EXT_CS   MODE0  2*MHZ  2*MHZ
# ~ SPIDEV external0m1    SPI4 DEVID5  MPU_EXT_CS   MODE1  2*MHZ  2*MHZ
# ~ SPIDEV external0m2    SPI4 DEVID5  MPU_EXT_CS   MODE2  2*MHZ  2*MHZ
# ~ SPIDEV external0m3    SPI4 DEVID5  MPU_EXT_CS   MODE3  2*MHZ  2*MHZ
# ~ SPIDEV pixartPC15     SPI4 DEVID13 ACCEL_EXT_CS MODE3  2*MHZ  2*MHZ

SPIDEV bmp280		  SPI1 DEVID3 BMP280_CS MODE3 1*MHZ 8*MHZ
# ~ SPIDEV dataflash      SPI3 DEVID1  FLASH_CS     MODE3  1*MHZ  8*MHZ
# ~ SPIDEV dataflash      SPI2 DEVID1  FLASH_CS     MODE3  1*MHZ  8*MHZ
# ~ SPIDEV ramtron        SPI2 DEVID10 FRAM_CS      MODE3  8*MHZ  8*MHZ 

# omnibusf4pro
SPIDEV sdcard     SPI2 DEVID2 SDCARD_CS MODE0 400*KHZ 25*MHZ

# IMU
define HAL_INS_DEFAULT HAL_INS_MPU9250_SPI

# Baro
define HAL_BARO_DEFAULT HAL_BARO_BMP280_SPI
define HAL_BARO_BMP280_NAME "bmp280"

# Now we start defining some PWM pins. We also map these pins to GPIO
# values, so users can set BRD_PWM_COUNT to choose how many of the PWM
# outputs on the primary MCU are setup as PWM and how many as
# GPIOs. To match HAL_PX4 we number the GPIOs for the PWM outputs
# starting at 50.
PE14 TIM1_CH4 TIM1 PWM(1) GPIO(50)
PE13 TIM1_CH3 TIM1 PWM(2) GPIO(51)
PE11 TIM1_CH2 TIM1 PWM(3) GPIO(52)
PE9  TIM1_CH1 TIM1 PWM(4) GPIO(53)
PD13 TIM4_CH2 TIM4 PWM(5) GPIO(54)
PD14 TIM4_CH3 TIM4 PWM(6) GPIO(55)

define BOARD_PWM_COUNT_DEFAULT 4

# "PPM" solder pad/resistor should be soldered and "S-BUS" resistor/solder pad removed
# Overwise UART1 or RCIN will not work
# ~ PB14 TIM12_CH1 TIM12 RCININT PULLDOWN LOW


# Enable RAMTROM parameter storage.
# ~ define HAL_WITH_RAMTRON 1

# Now define fallback storage location is flash if no FRAM
# fitted. This needs to be carefully chosen to align with your
# bootloader. The flash storage system needs two sectors, and the
# sectors must be at least 20% larger than HAL_STORAGE_SIZE.
# ~ define STORAGE_FLASH_PAGE 22

# ~ define STORAGE_FLASH_PAGE 1
# ~ define HAL_STORAGE_SIZE 15360
# ~ define HAL_STORAGE_SIZE 16384
# ~ define HAL_USE_EMPTY_STORAGE 1

# airbotf4 - winbond 25Q128 - 128Mbit/16MByte
# ~ define STORAGE_FLASH_PAGE 1
# ~ define HAL_STORAGE_SIZE 15360

# sparky2 - 25P16VP - 16Bits / 4MByte
# ~ define STORAGE_FLASH_PAGE 1
# ~ define HAL_STORAGE_SIZE 15360

# ombibusF4pro - no chip?
define STORAGE_FLASH_PAGE 1
define HAL_STORAGE_SIZE 15360

define HAL_OS_FATFS_IO 1
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# Enable FAT filesystem support (needs a microSD defined via SDIO).
# ~ define HAL_OS_FATFS_IO 1



# drotekP3pro
# ~ define HAL_STORAGE_SIZE 16384
# ~ define HAL_WITH_RAMTRON 1
# fallback to flash is no FRAM fitted
# ~ define STORAGE_FLASH_PAGE 22

# ~ define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
# ~ define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# enable FAT filesystem support (needs a microSD defined via SDIO)
# ~ define HAL_OS_FATFS_IO 1



# This defines the default maximum clock on I2C devices.
# ~ define HAL_I2C_MAX_CLOCK 100000

# no built-in compass, but probe the i2c bus for all possible
# external compass types
# ~ define ALLOW_ARM_NO_COMPASS
# ~ define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE # when you don't have Magnetometer/Compass
# ~ define HAL_INS_DEFAULT HAL_INS_NONE # when you don't have MPU/IMU
# ~ define HAL_BARO_DEFAULT HAL_BARO_NONE # when you don't have Barometer
# ~ define HAL_PROBE_EXTERNAL_I2C_COMPASSES
# ~ define HAL_I2C_INTERNAL_MASK 0

define ALLOW_ARM_NO_COMPASS
# ~ define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE
define HAL_COMPASS_DEFAULT HAL_COMPASS_AK8963_MPU9250
# ~ define HAL_PROBE_EXTERNAL_I2C_COMPASSES
# ~ define HAL_I2C_INTERNAL_MASK 0
define HAL_COMPASS_AUTO_ROT_DEFAULT 2


### DISABLE STUFF ###
# ~ define AC_AVOID_ENABLED DISABLED
# ~ define AC_FENCE DISABLED
# ~ define AC_RALLY DISABLED
# ~ define AC_TERRAIN DISABLED
# ~ define ADSB_ENABLED DISABLED
# ~ define AUTOTUNE_ENABLED DISABLED
# ~ define BEACON_ENABLED        DISABLED
# ~ define CAMERA DISABLED
# ~ define FRSKY_TELEM_ENABLED DISABLED
# ~ define GRIPPER_ENABLED       DISABLED
# ~ define LOGGING_ENABLED       DISABLED
# ~ define MAGNETOMETER          DISABLED
# ~ define MODE_ACRO_ENABLED     DISABLED
# ~ define MODE_AUTO_ENABLED DISABLED
# ~ define MODE_BRAKE_ENABLED DISABLED
# ~ define MODE_CIRCLE_ENABLED DISABLED
# ~ define MODE_DRIFT_ENABLED DISABLED
# ~ define MODE_FLIP_ENABLED     DISABLED
# ~ define MODE_FOLLOW_ENABLED DISABLED
# ~ define MODE_GUIDED_ENABLED DISABLED
# ~ define MODE_GUIDED_NOGPS_ENABLED DISABLED
# ~ define MODE_LOITER_ENABLED DISABLED
# ~ define MODE_POSHOLD_ENABLED DISABLED
# ~ define MODE_RTL_ENABLED DISABLED
# ~ define MODE_SMARTRTL_ENABLED DISABLED
# ~ define MODE_SPORT_ENABLED DISABLED
# ~ define MODE_THROW_ENABLED    DISABLED
# ~ define MODE_ZIGZAG_ENABLED   DISABLED
# ~ define DEVO_TELEM_ENABLED DISABLED
# ~ define MOUNT DISABLED
# ~ define NAV_GUIDED DISABLED
# ~ define OPTFLOW               DISABLED
# ~ define PARACHUTE DISABLED
# ~ define PRECISION_LANDING DISABLED
# ~ define PROXIMITY_ENABLED DISABLED
# ~ define RANGEFINDER_ENABLED DISABLED
# ~ define RPM_ENABLED           DISABLED
# ~ define SOLO_SUPPORT_ENABLED DISABLED
# ~ define SPRAYER DISABLED
# ~ define STATS_ENABLED         DISABLED
# ~ define VISUAL_ODOMETRY_ENABLED DISABLED
# ~ define WINCH_ENABLED DISABLED

# remove features:
# ~ define COMPASSMOT_ENABLED DISABLED
# ~ define PREARM_PID_CHECKS_ENABLED DISABLED
